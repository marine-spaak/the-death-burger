{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar _canOpenURL, _getInitialURL, _openURL;\nimport { Platform } from 'expo-modules-core';\nimport invariant from 'invariant';\nvar EventTypes = ['url'];\nvar listeners = [];\nexport default {\n  addEventListener: function addEventListener(type, listener) {\n    var _this = this;\n    if (!Platform.isDOMAvailable) {\n      return {\n        remove: function remove() {}\n      };\n    }\n    invariant(EventTypes.indexOf(type) !== -1, `Linking.addEventListener(): ${type} is not a valid event`);\n    var nativeListener = function nativeListener(nativeEvent) {\n      return listener({\n        url: window.location.href,\n        nativeEvent: nativeEvent\n      });\n    };\n    listeners.push({\n      listener: listener,\n      nativeListener: nativeListener\n    });\n    window.addEventListener('message', nativeListener, false);\n    return {\n      remove: function remove() {\n        _this.removeEventListener(type, listener);\n      }\n    };\n  },\n  removeEventListener: function removeEventListener(type, listener) {\n    if (!Platform.isDOMAvailable) {\n      return;\n    }\n    invariant(EventTypes.indexOf(type) !== -1, `Linking.removeEventListener(): ${type} is not a valid event.`);\n    var listenerIndex = listeners.findIndex(function (pair) {\n      return pair.listener === listener;\n    });\n    invariant(listenerIndex !== -1, 'Linking.removeEventListener(): cannot remove an unregistered event listener.');\n    var nativeListener = listeners[listenerIndex].nativeListener;\n    window.removeEventListener('message', nativeListener, false);\n    listeners.splice(listenerIndex, 1);\n  },\n  canOpenURL: function canOpenURL(_x) {\n    return (_canOpenURL = _canOpenURL || _asyncToGenerator(function* (url) {\n      return true;\n    })).apply(this, arguments);\n  },\n  getInitialURL: function getInitialURL() {\n    return (_getInitialURL = _getInitialURL || _asyncToGenerator(function* () {\n      if (!Platform.isDOMAvailable) return '';\n      return window.location.href;\n    })).apply(this, arguments);\n  },\n  openURL: function openURL(_x2) {\n    return (_openURL = _openURL || _asyncToGenerator(function* (url) {\n      if (Platform.isDOMAvailable) {\n        window.location = new URL(url, window.location).toString();\n      }\n    })).apply(this, arguments);\n  }\n};","map":{"version":3,"names":["Platform","invariant","EventTypes","listeners","addEventListener","type","listener","_this","isDOMAvailable","remove","indexOf","nativeListener","nativeEvent","url","window","location","href","push","removeEventListener","listenerIndex","findIndex","pair","splice","canOpenURL","_x","_canOpenURL","_asyncToGenerator","apply","arguments","getInitialURL","_getInitialURL","openURL","_x2","_openURL","URL","toString"],"sources":["/var/www/html/postapo/reactnative/the-death-burger/node_modules/expo-linking/src/ExpoLinking.web.ts"],"sourcesContent":["import { Platform } from 'expo-modules-core';\nimport invariant from 'invariant';\n\nimport { NativeURLListener, URLListener } from './Linking.types';\n\nconst EventTypes = ['url'];\n\nconst listeners: { listener: URLListener; nativeListener: NativeURLListener }[] = [];\n\nexport default {\n  addEventListener(type: 'url', listener: URLListener): { remove(): void } {\n    // Do nothing in Node.js environments\n    if (!Platform.isDOMAvailable) {\n      return { remove() {} };\n    }\n\n    invariant(\n      EventTypes.indexOf(type) !== -1,\n      `Linking.addEventListener(): ${type} is not a valid event`\n    );\n    const nativeListener: NativeURLListener = (nativeEvent) =>\n      listener({ url: window.location.href, nativeEvent });\n    listeners.push({ listener, nativeListener });\n    window.addEventListener('message', nativeListener, false);\n    return {\n      remove: () => {\n        this.removeEventListener(type, listener);\n      },\n    };\n  },\n\n  removeEventListener(type: 'url', listener: URLListener): void {\n    // Do nothing in Node.js environments\n    if (!Platform.isDOMAvailable) {\n      return;\n    }\n    invariant(\n      EventTypes.indexOf(type) !== -1,\n      `Linking.removeEventListener(): ${type} is not a valid event.`\n    );\n    const listenerIndex = listeners.findIndex((pair) => pair.listener === listener);\n    invariant(\n      listenerIndex !== -1,\n      'Linking.removeEventListener(): cannot remove an unregistered event listener.'\n    );\n    const nativeListener = listeners[listenerIndex].nativeListener;\n    window.removeEventListener('message', nativeListener, false);\n    listeners.splice(listenerIndex, 1);\n  },\n\n  async canOpenURL(url: string): Promise<boolean> {\n    // In reality this should be able to return false for links like `chrome://` on chrome.\n    return true;\n  },\n\n  async getInitialURL(): Promise<string> {\n    if (!Platform.isDOMAvailable) return '';\n    return window.location.href;\n  },\n\n  async openURL(url: string): Promise<void> {\n    if (Platform.isDOMAvailable) {\n      // @ts-ignore\n      window.location = new URL(url, window.location).toString();\n    }\n  },\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,mBAAmB;AAC5C,OAAOC,SAAS,MAAM,WAAW;AAIjC,IAAMC,UAAU,GAAG,CAAC,KAAK,CAAC;AAE1B,IAAMC,SAAS,GAAmE,EAAE;AAEpF,eAAe;EACbC,gBAAgB,WAAAA,iBAACC,IAAW,EAAEC,QAAqB;IAAA,IAAAC,KAAA;IAEjD,IAAI,CAACP,QAAQ,CAACQ,cAAc,EAAE;MAC5B,OAAO;QAAEC,MAAM,WAAAA,OAAA,GAAI;MAAC,CAAE;;IAGxBR,SAAS,CACPC,UAAU,CAACQ,OAAO,CAACL,IAAI,CAAC,KAAK,CAAC,CAAC,EAC/B,+BAA+BA,IAAI,uBAAuB,CAC3D;IACD,IAAMM,cAAc,GAAsB,SAApCA,cAAcA,CAAuBC,WAAW;MAAA,OACpDN,QAAQ,CAAC;QAAEO,GAAG,EAAEC,MAAM,CAACC,QAAQ,CAACC,IAAI;QAAEJ,WAAW,EAAXA;MAAW,CAAE,CAAC;IAAA;IACtDT,SAAS,CAACc,IAAI,CAAC;MAAEX,QAAQ,EAARA,QAAQ;MAAEK,cAAc,EAAdA;IAAc,CAAE,CAAC;IAC5CG,MAAM,CAACV,gBAAgB,CAAC,SAAS,EAAEO,cAAc,EAAE,KAAK,CAAC;IACzD,OAAO;MACLF,MAAM,EAAE,SAAAA,OAAA,EAAK;QACXF,KAAI,CAACW,mBAAmB,CAACb,IAAI,EAAEC,QAAQ,CAAC;MAC1C;KACD;EACH,CAAC;EAEDY,mBAAmB,WAAAA,oBAACb,IAAW,EAAEC,QAAqB;IAEpD,IAAI,CAACN,QAAQ,CAACQ,cAAc,EAAE;MAC5B;;IAEFP,SAAS,CACPC,UAAU,CAACQ,OAAO,CAACL,IAAI,CAAC,KAAK,CAAC,CAAC,EAC/B,kCAAkCA,IAAI,wBAAwB,CAC/D;IACD,IAAMc,aAAa,GAAGhB,SAAS,CAACiB,SAAS,CAAC,UAACC,IAAI;MAAA,OAAKA,IAAI,CAACf,QAAQ,KAAKA,QAAQ;IAAA,EAAC;IAC/EL,SAAS,CACPkB,aAAa,KAAK,CAAC,CAAC,EACpB,8EAA8E,CAC/E;IACD,IAAMR,cAAc,GAAGR,SAAS,CAACgB,aAAa,CAAC,CAACR,cAAc;IAC9DG,MAAM,CAACI,mBAAmB,CAAC,SAAS,EAAEP,cAAc,EAAE,KAAK,CAAC;IAC5DR,SAAS,CAACmB,MAAM,CAACH,aAAa,EAAE,CAAC,CAAC;EACpC,CAAC;EAEKI,UAAU,WAAAA,WAAAC,EAAA;IAAA,QAAAC,WAAA,GAAAA,WAAA,IAAAC,iBAAA,YAACb,GAAW;MAE1B,OAAO,IAAI;IACb,CAAC,GAAAc,KAAA,OAAAC,SAAA;EAAA;EAEKC,aAAa,WAAAA,cAAA;IAAA,QAAAC,cAAA,GAAAA,cAAA,IAAAJ,iBAAA;MACjB,IAAI,CAAC1B,QAAQ,CAACQ,cAAc,EAAE,OAAO,EAAE;MACvC,OAAOM,MAAM,CAACC,QAAQ,CAACC,IAAI;IAC7B,CAAC,GAAAW,KAAA,OAAAC,SAAA;EAAA;EAEKG,OAAO,WAAAA,QAAAC,GAAA;IAAA,QAAAC,QAAA,GAAAA,QAAA,IAAAP,iBAAA,YAACb,GAAW;MACvB,IAAIb,QAAQ,CAACQ,cAAc,EAAE;QAE3BM,MAAM,CAACC,QAAQ,GAAG,IAAImB,GAAG,CAACrB,GAAG,EAAEC,MAAM,CAACC,QAAQ,CAAC,CAACoB,QAAQ,EAAE;;IAE9D,CAAC,GAAAR,KAAA,OAAAC,SAAA;EAAA;CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}